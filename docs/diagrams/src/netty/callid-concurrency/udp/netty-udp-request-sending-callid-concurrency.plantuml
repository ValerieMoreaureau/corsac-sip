@startuml Netty Datagram Oriented Transport Protocol Request Sending
!includeurl https://raw.githubusercontent.com/RestComm/design/master/telestax-style.plantuml!0

autonumber
actor UAC

Application -> MessageFactoryImpl : createRequest
Application -> SipProviderImpl : getNewClientTransaction(request)
SipProviderImpl -> SipStackImpl : getNextHop(request)
SipProviderImpl -> SipProviderImpl : createClientTransaction(request, hop)
SipProviderImpl -> SipStackImpl : addClientTransaction(tx)
SipProviderImpl -> SipStackImpl : findListeningPoint()
SipProviderImpl -> SipStackImpl : createMessageChannel(request,\nlisteningPoint.messageprocessor, hop)
SipStackImpl -> NettyDatagramMessageProcessor : createMessageChannel(hostPort)
NettyDatagramMessageProcessor -> NettyDatagramMessageProcessor : select one of the Netty Channels from the pool
NettyDatagramMessageProcessor -> NettyDatagramMessageChannel : new
SipStackImpl -> SipStackImpl : createClientTransaction(tx, msgChannel)
SipStackImpl -> SipClientTransactionImpl : new
SipClientTransactionImpl -> SipClientTransactionImpl : setMessageChannel
Application -> SipClientTransactionImpl : sendRequest(request)

SipClientTransactionImpl -> OutgoingMessageProcessingTask : new
NettyMessageHandler -> MessageProcessorQueue : hash based on call id to one of the queues
NettyMessageHandler -> MessageProcessorQueue : offer first task to the queue
MessageProcessor -> OutgoingMessageProcessingTask : pull task from queue
MessageProcessor -> OutgoingMessageProcessingTask : run task

OutgoingMessageProcessingTask -> SipClientTransactionImpl : sendRequest(request)
SipClientTransactionImpl -> SipClientTransactionImpl : checkHeaders    
SipClientTransactionImpl -> SipClientTransactionImpl : sendMessage    
SipClientTransactionImpl -> SipClientTransactionImpl : update FSM and timers
SipClientTransactionImpl -> SipTransactionImpl : sendMessage
SipTransactionImpl -> SipTransactionImpl : loop through MessageProcessors\n and check if msg is aimed\nat the SIP Stack itself
alt internal processing case
    SipTransactionImpl -> IncomingMessageProcessingTask : new
    NettyMessageHandler -> MessageProcessorQueue : hash based on call id to one of the queues
    NettyMessageHandler -> MessageProcessorQueue : offer last task to the queue        
else external processing case
    SipTransactionImpl -> NettyDatagramMessageChannel : sendMessage     
    NettyDatagramMessageChannel -> Channel : writeAndFlush(msg ByteBuf)    
end
@enduml