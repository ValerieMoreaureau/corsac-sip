@startuml Netty Datagram Oriented Transport Protocol Response Sending
!includeurl https://raw.githubusercontent.com/RestComm/design/master/telestax-style.plantuml!0

autonumber

group MessageProcessorExecutor WorkerThread        
    Application -> MessageFactoryImpl : createResponse
    Application -> RequestEvent : getServerTransaction(request)
    Application -> SipProviderImpl : if previous is null\ngetNewServerTransaction(request)
    SipProviderImpl -> SipProviderImpl : findTransaction
    SipProviderImpl -> SipStackImpl : createServerTransaction(request.MessageChannel)
    SipStackImpl -> SipServerTransactionImpl : new
    SipServerTransactionImpl -> SipServerTransactionImpl : setMessageChannel

    Application -> SipServerTransactionImpl : sendResponse(response)

    SipServerTransactionImpl -> OutgoingMessageProcessingTask : new
    SipServerTransactionImpl -> MessageProcessorExecutor : addTaskFirst    
end

group MessageProcessorExecutor WorkerThread
    MessageProcessorExecutor -> MessageProcessorExecutor : pull task from queue
    MessageProcessorExecutor -> IncomingMessageProcessingTask : execute

    OutgoingMessageProcessingTask -> SipServerTransactionImpl : sendResponse(response)    
    SipServerTransactionImpl -> SipServerTransactionImpl : checkHeaders    

    SipServerTransactionImpl -> SipServerTransactionImpl : sendMessage    
    SipServerTransactionImpl -> SipServerTransactionImpl : sendResponse    
    SipTransactionImpl -> NettyStreamMessageChannel : sendMessage 
    NettyStreamMessageChannel -> NettyStreamMessageChannel : loop through MessageProcessors\n and check if msg is aimed\nat the SIP Stack itself
    alt internal processing case
        SipTransactionImpl -> IncomingMessageProcessingTask : new
        NettyMessageHandler -> MessageProcessorQueue : hash based on call id to one of the queues
        NettyMessageHandler -> MessageProcessorQueue : offer last task to the queue        
    else external processing case
        NettyStreamMessageChannel -> SIPMessage: encodeAsBytes
        NettyStreamMessageChannel -> NettyStreamMessageChannel: sendTCPMessage
        alt channel null or not active
            NettyStreamMessageChannel -> nettyConnectionListener: addPendingMessage(byteBuf)
            NettyStreamMessageChannel -> Boostrap: connect asynchronously
            NettyConnectionListener -> NettyConnectionListener: operationComplete
            NettyConnectionListener -> NettyStreamMessageChannel: writeMessage
        else channel active
            NettyStreamMessageChannel -> NettyStreamMessageChannel : writeMessage(msg ByteBuf)        
        end        
        NettyStreamMessageChannel -> Channel : write(msg ByteBuf) async
        Channel -> ChannelFutureListener : operationComplete
        ChannelFutureListener -> ChannelFutureListener : if not successful trigger IOException async    
    end
    SipServerTransactionImpl -> SipServerTransactionImpl : startTransactionTimer    
    SipServerTransactionImpl -> SipDialog : startRetransmitTimer    
end
@enduml